name: 08 - Using Variables

on:
  # push:
  workflow_dispatch:

env:
  WORKFLOW_VAR: "I am a workflow variable"
  OVERWRITTEN: "I will be overwritten"
  UNDEFINED_VAR_WITH_DEFAULT: ${{ vars.UNDEFINED_VAR || 'default value' }}

jobs:
  echo:
    runs-on: ubuntu-latest
    env:
      JOB_VAR: "I am a job env variable"
      OVERWRITTEN: "Overwritten at the job level"
    steps:
      - name: Print Env Variables
        env:
          STEP_VAR: "I am a step env variable"
          step_var2: "I am another step env variable"
        run: |
          echo "Step env var: $STEP_VAR"
          echo "Step env var 2: ${{ env.step_var2 }}"
          echo "Job env var: ${{ env.JOB_VAR }}"
          echo "Workflow env var: ${{ env.WORKFLOW_VAR }}"
          echo "Overwritten: ${{ env.OVERWRITTEN }}"

      - name: Overwrite job variable
        env:
          OVERWRITTEN: "Overwritten at the step level"
        run: |
          echo "Overwritten: ${{ env.OVERWRITTEN }}"
  echo2:
    runs-on: ubuntu-latest
    steps:
      - name: Print Variables
        run: |
          echo "Repository var: ${{ vars.REPOSITORY_VAR }}"
  echo-prod:
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Print Prod Variables
        run: |
          echo "Repository var: ${{ vars.REPOSITORY_VAR }}"
          echo "Target var: ${{ vars.TARGET_VAR }}"
  echo-staging:
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Print Staging Variables
        run: |
          echo "Repository var: ${{ vars.REPOSITORY_VAR }}"
          echo "Target var: ${{ vars.TARGET_VAR }}"
  echo-undefined:
    runs-on: ubuntu-latest
    steps:
      - name: Print Undefined Variables
        run: |
          echo "Repository var: ${{ env.UNDEFINED_VAR_WITH_DEFAULT }}"
